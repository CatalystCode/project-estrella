{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "branch": {
      "type": "string"
    },
    "edition": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The type of database to create."
      }
    },
    "maxSizeBytes": {
      "type": "string",
      "defaultValue": "1073741824"
    },
    "requestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "metadata": {
        "description": "Describes geoTwit plan's instance count"
      }
    },
    "deploymentPostFix": {
      "type": "string",
      "minLength": 1
    },
    "cosmosDBAccountName": {
      "type": "string",
      "defaultValue": "estrellaml"
    }
  },
  "variables": {
    "uniqueId": "[parameters('deploymentPostFix')]",
    "hostingPlanName": "[toLower(concat('Estrellahostingplan', variables('uniqueId')))]",
    "dataStorageAccountName": "[toLower(concat('Estrelladata', variables('uniqueId')))]",
    "location": "[resourceGroup().location]",
    "interfaceWebSiteName": "[concat('Estrellainterface-', variables('uniqueId'))]",
    "functionsWebSiteName": "[concat('EstrellaFunctions-', variables('uniqueId'))]",
    "servicesWebSiteName": "[concat('EstrellaServices-', variables('uniqueId'))]",
    "cosmosDB": "[concat('EstrellaDB', variables('uniqueId'))]",
    "databaseName": "Estrella"
  },

  "resources": [
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('functionsWebSiteName')]",
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
        "displayName": "FunctionsWebSite"
      },
      "properties": {
        "name": "[variables('functionsWebSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('dataStorageAccountName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-04-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]",
            "[concat('Microsoft.Web/Sites/', variables('functionsWebSiteName'), '/config/web')]",
            "[concat('Microsoft.Web/Sites/', variables('functionsWebSiteName'), '/config/appsettings')]",
            "[resourceId('Microsoft.Web/sites', variables('functionsWebSiteName'))]"
          ],
          "properties": {
            "RepoUrl": "https://github.com/CatalystCode/project-estrella-functions",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('FunctionsWebSiteName'))]"
          ],
          "properties": {
            "phpVersion": "5.5",
            "netFrameworkVersion": "v4.6",
            "webSocketsEnabled": true,
            "alwaysOn": true,
            "httpLoggingEnabled": true,
            "logsDirectorySizeLimit": 40,
            "detailedErrorLoggingEnabled": true,
            "remoteDebuggingEnabled": false,
            "remoteDebuggingVersion": "VS2015"
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('functionsWebSiteName'))]"
          ],
          "tags": {
            "displayName": "ApplicationSettings"
          },
          "properties": {
            "WEBSITE_NODE_DEFAULT_VERSION": "6.5.0",
            "FUNCTIONS_EXTENSION_VERSION": "~1",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('dataStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('dataStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
            "AZURE_STORAGE_ACCOUNT": "[variables('dataStorageAccountName')]", 
            "AZURE_STORAGE_ACCESS_KEY" : "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), '2015-05-01-preview').key1]"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-04-01",
      "name": "[variables('interfaceWebSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-04-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]",
            "[concat('Microsoft.Web/Sites/', variables('interfaceWebSiteName'), '/config/web')]",
            "[concat('Microsoft.Web/Sites/', variables('interfaceWebSiteName'), '/config/appsettings')]",
            "[resourceId('Microsoft.Web/sites', variables('interfaceWebSiteName'))]"
          ],
          "properties": {
            "RepoUrl": "https://github.com/CatalystCode/project-estrella-interface",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "apiVersion": "2015-04-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('interfaceWebSiteName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]"
          ],
          "tags": {
            "displayName": "ApplicationSettings"
          },
          "properties": {
            "WEBSITE_NODE_DEFAULT_VERSION": "6.9.1",
            "STORAGE_ACCOUNT": "[variables('dataStorageAccountName')]",
            "STORAGE_KEY": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), '2015-05-01-preview').key1]",
            "REACT_APP_SERVICE_HOST": "[concat('https://', variables('servicesWebSiteName'), '.azurewebsites.net')]"
          }
        },
        {
          "apiVersion": "2015-04-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('interfaceWebSiteName'))]"
          ],
          "properties": {
            "alwaysOn": "true"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-04-08",
      "name": "[parameters('cosmosDBAccountName')]",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "kind": "GlobalDocumentDB",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "tags": {
          "displayName": "EstrellaML"
      },
      "scale": null,
      "properties": {
          "databaseAccountOfferType": "Standard",
          "consistencyPolicy": {
              "defaultConsistencyLevel": "Session",
              "maxIntervalInSeconds": 5,
              "maxStalenessPrefix": 100
          },
          "name": "[parameters('cosmosDBAccountName')]"
      }
    },
    {
      "apiVersion": "2015-04-01",
      "name": "[variables('servicesWebSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "properties": {
        "cors": { "allowedOrigins": [ "*" ] },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-04-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]",
            "[concat('Microsoft.Web/Sites/', variables('servicesWebSiteName'), '/config/web')]",
            "[concat('Microsoft.Web/Sites/', variables('servicesWebSiteName'), '/config/appsettings')]",
            "[resourceId('Microsoft.Web/sites', variables('servicesWebSiteName'))]"
          ],
          "properties": {
            "RepoUrl": "https://github.com/CatalystCode/project-estrella-services",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "apiVersion": "2015-04-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('servicesWebSiteName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName'))]"
          ],
          "tags": {
            "displayName": "ApplicationSettings"
          },
          "properties": {
            "WEBSITE_NODE_DEFAULT_VERSION": "6.9.1",
            "STORAGE_ACCOUNT": "[variables('dataStorageAccountName')]",
            "STORAGE_KEY": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), '2015-05-01-preview').key1]",
            "AZURE_STORAGE_CONNECTION_STRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('dataStorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('dataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
          }
        },
        {
          "apiVersion": "2015-04-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('servicesWebSiteName'))]"
          ],
          "properties": {
            "alwaysOn": "true"
          }
        }
      ]
    },
    {
      "name": "[variables('dataStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "storageAccount"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    }
  ],
  "outputs": {
  }
}